import { loadTranslations } from "./load";
import { createTranslationFn } from "./translate";
import { getStore } from "../configuration/configuration-store";
let translationsMap;
export const initTranslations = async (staticsUrl, language, callback) => {
  loadTranslations(staticsUrl, language, async (translations) => {
    const context = {};
    const savedTranslations = getStore().translations;
    translationsMap = {
      ...translations,
      ...savedTranslations,
    };
    const translate = createTranslationFn(translations, context);
    callback(translate);
  });
};
export const updateTranslation = (translations) => {
  translationsMap = {
    ...translationsMap,
    ...translations,
  };
};
export const translate = function (key, defaultValue) {
  if (defaultValue === void 0) {
    defaultValue = key;
  }
  return translationsMap[key] || defaultValue;
};
//# sourceMappingURL=i18n.js.map
