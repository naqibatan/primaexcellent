import _defineProperty from "@babel/runtime/helpers/defineProperty";
import { AppDefId } from "../../constants/constants";
import { getInitialSettings } from "../configuration/get-initial-settings";
class ComponentSettingsService {
  constructor() {
    _defineProperty(this, "settings", void 0);
  }
  async getSettingsAndTranslations(preview) {
    var _window$wixEmbedsAPI,
      _this$settings,
      _this$settings2,
      _this$settings2$setti,
      _this$settings3;
    if (preview === void 0) {
      preview = false;
    }
    const languageCode =
      ((_window$wixEmbedsAPI = window.wixEmbedsAPI) == null
        ? void 0
        : _window$wixEmbedsAPI.getLanguage()) || "en";
    const maybePreviewPath = (preview && "preview-") || "";
    this.settings = await fetch(
      "/_serverless/cookie-consent-settings-serverless/v1/cookie-banner-" +
        maybePreviewPath +
        "settings?languageCode=" +
        languageCode,
      {
        method: "GET",
        headers: {
          authorization: getAuthorization(),
          "x-wix-client-artifact-id": "cookie-consent-banner-for-uou",
        },
      }
    )
      .then((res) => res.json())
      .then(mapAppSettingsResponse)
      .catch((reason) => {
        console.log(
          "error receiving component settings from serverless " + reason
        );
        return this.loadSettings().then(() => this.settings);
      });
    return {
      settings:
        (_this$settings = this.settings) == null
          ? void 0
          : _this$settings.settings,
      translations: {
        ...((_this$settings2 = this.settings) == null
          ? void 0
          : (_this$settings2$setti = _this$settings2.settings) == null
          ? void 0
          : _this$settings2$setti.texts),
        ...((_this$settings3 = this.settings) == null
          ? void 0
          : _this$settings3.translations),
      },
    };
  }
  async getSettings() {
    var _this$settings4;
    await this.loadSettings();
    return (
      ((_this$settings4 = this.settings) == null
        ? void 0
        : _this$settings4.settings) || getInitialSettings()
    );
  }
  async getTranslations() {
    var _this$settings5, _this$settings5$setti, _this$settings6;
    await this.loadSettings();
    return {
      ...((_this$settings5 = this.settings) == null
        ? void 0
        : (_this$settings5$setti = _this$settings5.settings) == null
        ? void 0
        : _this$settings5$setti.texts),
      ...((_this$settings6 = this.settings) == null
        ? void 0
        : _this$settings6.translations),
    };
  }
  async loadSettings() {
    var _window$wixEmbedsAPI2;
    const locale =
      ((_window$wixEmbedsAPI2 = window.wixEmbedsAPI) == null
        ? void 0
        : _window$wixEmbedsAPI2.getLanguage()) || "en";
    this.settings = await fetch(
      "/_api/app-settings-service/v1/settings/components/" +
        AppDefId +
        "?languageKey.languageCode=" +
        locale +
        "&host=BUSINESS_MANAGER&state=NR",
      {
        method: "GET",
        cache: "no-cache",
        headers: {
          Authorization: getAuthorization(),
          Accept: "application/json",
          "Content-Type": "application/json",
          "x-wix-client-artifact-id": "cookie-consent-banner-for-uou",
        },
      }
    )
      .then((res) => res.json())
      .then(mapAppSettingsResponse)
      .catch((reason) => {
        console.log("error receiving component settings " + reason);
        return {
          settings: getInitialSettings(),
          translations: {},
        };
      });
  }
}
export const componentSettingsService = new ComponentSettingsService();
const getAuthorization = () => {
  var _window$wixEmbedsAPI3;
  return (
    ((_window$wixEmbedsAPI3 = window.wixEmbedsAPI) == null
      ? void 0
      : _window$wixEmbedsAPI3.getAppToken(AppDefId)) || ""
  );
};
const mapAppSettingsResponse = (_ref) => {
  var _settings$theme,
    _settings$privacyPoli,
    _settings$texts,
    _settings$audience,
    _settings$declineAllC,
    _settings$declineAllC2,
    _settings$revisitSett,
    _settings$revisitSett2,
    _settings$revisitSett3;
  let { settings, translations } = _ref;
  return {
    settings: {
      ...settings,
      texts: (settings == null ? void 0 : settings.texts) || {},
      appEnabled: (settings == null ? void 0 : settings.appEnabled) || false,
      expiryDate: new Date(
        (settings == null ? void 0 : settings.expiryDate) || 0
      ),
      theme:
        settings == null
          ? void 0
          : (_settings$theme = settings.theme) == null
          ? void 0
          : _settings$theme.replace(/-/g, "_"),
      privacyPolicyType:
        settings == null
          ? void 0
          : (_settings$privacyPoli = settings.privacyPolicyType) == null
          ? void 0
          : _settings$privacyPoli.replace(/-/g, "_"),
      privacyPolicyPage:
        (settings == null ? void 0 : settings.privacyPolicyPage) || "",
      privacyPolicyUrl:
        (settings == null
          ? void 0
          : (_settings$texts = settings.texts) == null
          ? void 0
          : _settings$texts.privacyPolicyUrl) || "",
      audience:
        settings == null
          ? void 0
          : (_settings$audience = settings.audience) == null
          ? void 0
          : _settings$audience.replace(/-/g, "_"),
      declineAllConfig: {
        enabled:
          (settings == null
            ? void 0
            : (_settings$declineAllC = settings.declineAllConfig) == null
            ? void 0
            : _settings$declineAllC.enabled) || false,
        geo:
          (settings == null
            ? void 0
            : (_settings$declineAllC2 = settings.declineAllConfig) == null
            ? void 0
            : _settings$declineAllC2.geo) || [],
      },
      revisitSettingsConfig: {
        enabled:
          (settings == null
            ? void 0
            : (_settings$revisitSett = settings.revisitSettingsConfig) == null
            ? void 0
            : _settings$revisitSett.enabled) || false,
        buttonPosition:
          settings == null
            ? void 0
            : (_settings$revisitSett2 = settings.revisitSettingsConfig) == null
            ? void 0
            : (_settings$revisitSett3 =
                _settings$revisitSett2.buttonPosition) == null
            ? void 0
            : _settings$revisitSett3.replace(/-/g, "_"),
      },
    },
    translations: translations || {},
  };
};
//# sourceMappingURL=component-settings-service.js.map
