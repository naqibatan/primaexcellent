import _defineProperty from "@babel/runtime/helpers/defineProperty";
import { BaseComponent } from "../../types";
import { Section, Text, Toggle } from "../elements";
import { DataHook } from "../../constants/data-hooks";
import css from "./section.scss";
import { generateId } from "../../utils/id-generator";
export class SectionComponent extends BaseComponent {
  constructor() {
    super(...arguments);
    _defineProperty(this, "onCheckedChanged", () => {
      const { policyKeys, onToggleChanged } = this.props;
      onToggleChanged(policyKeys);
    });
  }
  render() {
    const { toggleChecked, toggleEnabled, title, description, toggleTooltip } =
      this.props;
    const root = Section({
      className: css.section,
      dataHook: DataHook.sectionComponentRoot,
    });
    const titleId = generateId();
    const descriptionId = generateId();
    root.appendChild(
      Text({
        id: titleId,
        dataHook: DataHook.sectionComponentTitle,
        className: css.section_title,
        text: title,
        subtitle: true,
      })
    );
    root.appendChild(
      Text({
        id: descriptionId,
        dataHook: DataHook.sectionComponentDescription,
        className: css.section_text,
        text: description,
      })
    );
    root.appendChild(
      Toggle({
        className: css.toggle,
        tooltip: toggleTooltip,
        dataHook: DataHook.sectionComponentToggle,
        checked: toggleChecked,
        enabled: toggleEnabled,
        onCheckedChanged: this.onCheckedChanged,
        ariaDescribedBy: descriptionId,
        ariaLabelledBy: titleId,
      })
    );
    return {
      element: root,
    };
  }
}
//# sourceMappingURL=section.component.js.map
