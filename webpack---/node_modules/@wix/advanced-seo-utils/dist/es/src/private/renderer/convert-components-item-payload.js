var __assign =
  (this && this.__assign) ||
  function () {
    __assign =
      Object.assign ||
      function (t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
      };
    return __assign.apply(this, arguments);
  };
var __spreadArray =
  (this && this.__spreadArray) ||
  function (to, from, pack) {
    if (pack || arguments.length === 2)
      for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
          if (!ar) ar = Array.prototype.slice.call(from, 0, i);
          ar[i] = from[i];
        }
      }
    return to.concat(ar || Array.prototype.slice.call(from));
  };
import { siteIDs } from "../adapters/utils";
import { getDynamicPatternsSchema } from "./get-dynamic-patterns-schema";
import { getContextWithoutPagination } from "./utils/resolve-component-payload/get-context-pagination";
import { getSdTagsFromBlob } from "./utils/resolve-component-payload/get-sd-tags-from-blog";
export function convertComponentsItemPayload(_a) {
  var _b = _a.componentsItemPayload,
    componentsItemPayload = _b === void 0 ? [] : _b,
    context = _a.context,
    isTpaPage = _a.isTpaPage;
  var componentContext = {};
  var componentsTags = [];
  for (
    var _i = 0, componentsItemPayload_1 = componentsItemPayload;
    _i < componentsItemPayload_1.length;
    _i++
  ) {
    var _c = componentsItemPayload_1[_i],
      itemData = _c.itemData,
      patternBlob = _c.patternBlob,
      adapter = _c.adapter;
    var itemDataWithContext = __assign(__assign({}, itemData), {
      context: context,
    });
    var data = adapter.getData(itemDataWithContext);
    var dynamicPatternsSchema = getDynamicPatternsSchema(
      adapter,
      itemDataWithContext
    );
    var componentHasPagination = Boolean(data[siteIDs.TOTAL_PAGE_COUNT]);
    if (isTpaPage || !componentHasPagination) {
      componentsTags = __spreadArray(
        __spreadArray([], componentsTags, true),
        [getSdTagsFromBlob(patternBlob), dynamicPatternsSchema],
        false
      );
      componentContext = getContextWithoutPagination(
        __assign(__assign({}, componentContext), data)
      );
      continue;
    }
    var isComponentWithMostPages =
      data[siteIDs.TOTAL_PAGE_COUNT] >=
      (componentContext[siteIDs.TOTAL_PAGE_COUNT] || 0);
    if (isComponentWithMostPages) {
      componentsTags = __spreadArray(
        __spreadArray([], componentsTags, true),
        [patternBlob, dynamicPatternsSchema],
        false
      );
      componentContext = __assign(__assign({}, componentContext), data);
      continue;
    }
  }
  return {
    componentsTags: componentsTags,
    componentContext: componentContext,
  };
}
