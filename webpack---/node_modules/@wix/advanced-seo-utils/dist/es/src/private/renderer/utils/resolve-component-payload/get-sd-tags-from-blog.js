var __assign =
  (this && this.__assign) ||
  function () {
    __assign =
      Object.assign ||
      function (t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
      };
    return __assign.apply(this, arguments);
  };
import { IDENTIFIERS } from "../../../types/Identifiers";
import { identify } from "../identify";
export var getSdTagsFromBlob = function (blob) {
  var _a;
  return __assign(__assign({}, blob), {
    tags:
      (_a = blob === null || blob === void 0 ? void 0 : blob.tags) === null ||
      _a === void 0
        ? void 0
        : _a.filter(function (tag) {
            return identify(tag) === IDENTIFIERS.STRUCTURED_DATA;
          }),
  });
};
