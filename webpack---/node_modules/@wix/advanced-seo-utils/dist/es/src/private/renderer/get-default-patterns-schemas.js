var __assign =
  (this && this.__assign) ||
  function () {
    __assign =
      Object.assign ||
      function (t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
      };
    return __assign.apply(this, arguments);
  };
import { STATIC_PAGE_V2 } from "../types/ItemTypes";
import { identify } from "./utils/identify";
import { IDENTIFIERS } from "../types/Identifiers";
export function getDefaultPatternsSchemas(
  itemType,
  itemTypePatternBlob,
  staticPagePatternBlob
) {
  var sanitziedDefaultStaticPatternSchema =
    itemType === STATIC_PAGE_V2
      ? staticPagePatternBlob
      : clearSdFromDefaultStaticPattern(staticPagePatternBlob);
  var defaultItemTypePatternSchema =
    itemType === STATIC_PAGE_V2 ? {} : itemTypePatternBlob;
  return [sanitziedDefaultStaticPatternSchema, defaultItemTypePatternSchema];
}
function clearSdFromDefaultStaticPattern(defaultStaticPatternSchema) {
  var _a;
  var defaultTagsWithoutSd =
    (_a =
      defaultStaticPatternSchema === null ||
      defaultStaticPatternSchema === void 0
        ? void 0
        : defaultStaticPatternSchema.tags) === null || _a === void 0
      ? void 0
      : _a.filter(function (tag) {
          return identify(tag) !== IDENTIFIERS.STRUCTURED_DATA;
        });
  return __assign(__assign({}, defaultStaticPatternSchema), {
    tags: defaultTagsWithoutSd,
  });
}
