var ue = Object.defineProperty;
var se = (n, e, t) =>
  e in n
    ? ue(n, e, { enumerable: !0, configurable: !0, writable: !0, value: t })
    : (n[e] = t);
var m = (n, e, t) => (se(n, typeof e != "symbol" ? e + "" : e, t), t);
var T,
  A,
  W,
  F,
  D,
  X = -1,
  E = function (n) {
    addEventListener(
      "pageshow",
      function (e) {
        e.persisted && ((X = e.timeStamp), n(e));
      },
      !0
    );
  },
  H = function () {
    return (
      window.performance &&
      performance.getEntriesByType &&
      performance.getEntriesByType("navigation")[0]
    );
  },
  k = function () {
    var n = H();
    return (n && n.activationStart) || 0;
  },
  h = function (n, e, t, a) {
    var o = H(),
      i = "navigate";
    return (
      t
        ? (i = t)
        : X >= 0
        ? (i = "back-forward-cache")
        : o &&
          (document.prerendering || k() > 0
            ? (i = "prerender")
            : document.wasDiscarded
            ? (i = "restore")
            : o.type && (i = o.type.replace(/_/g, "-"))),
      {
        name: n,
        value: e === void 0 ? -1 : e,
        rating: "good",
        delta: 0,
        entries: [],
        id: "v3-"
          .concat(Date.now(), "-")
          .concat(Math.floor(8999999999999 * Math.random()) + 1e12),
        navigationType: i,
        navigationId: a || 1,
      }
    );
  },
  w = function (n) {
    return (
      PerformanceObserver.supportedEntryTypes.includes("soft-navigation") &&
      (n == null ? void 0 : n.reportSoftNavs)
    );
  },
  Y = function (n) {
    return n && n !== 1
      ? window.performance &&
          performance.getEntriesByType &&
          performance.getEntriesByType("soft-navigation")[n - 2]
      : window.performance &&
          performance.getEntriesByType &&
          performance.getEntriesByType("navigation")[0];
  },
  y = function (n, e, t) {
    var a = w(t);
    try {
      if (PerformanceObserver.supportedEntryTypes.includes(n)) {
        var o = new PerformanceObserver(function (i) {
          Promise.resolve().then(function () {
            e(i.getEntries());
          });
        });
        return (
          o.observe(
            Object.assign(
              { type: n, buffered: !0, includeSoftNavigationObservations: a },
              t || {}
            )
          ),
          o
        );
      }
    } catch {}
  },
  l = function (n, e, t, a) {
    var o, i;
    return function (r) {
      e.value >= 0 &&
        (r || a) &&
        ((i = e.value - (o || 0)) || o === void 0) &&
        ((o = e.value),
        (e.delta = i),
        (e.rating = (function (u, c) {
          return u > c[1] ? "poor" : u > c[0] ? "needs-improvement" : "good";
        })(e.value, t)),
        n(e));
    };
  },
  N = function (n) {
    requestAnimationFrame(function () {
      return requestAnimationFrame(function () {
        return n();
      });
    });
  },
  M = function (n) {
    var e = function (t) {
      (t.type !== "pagehide" && document.visibilityState !== "hidden") || n(t);
    };
    addEventListener("visibilitychange", e, !0),
      addEventListener("pagehide", e, !0);
  },
  S = -1,
  J = function () {
    return document.visibilityState !== "hidden" || document.prerendering
      ? 1 / 0
      : 0;
  },
  P = function (n) {
    document.visibilityState === "hidden" &&
      S > -1 &&
      ((S = n.type === "visibilitychange" ? n.timeStamp : 0), de());
  },
  U = function () {
    addEventListener("visibilitychange", P, !0),
      addEventListener("prerenderingchange", P, !0);
  },
  de = function () {
    removeEventListener("visibilitychange", P, !0),
      removeEventListener("prerenderingchange", P, !0);
  },
  z = function () {
    return (
      S < 0 &&
        ((S = J()),
        U(),
        E(function () {
          setTimeout(function () {
            (S = J()), U();
          }, 0);
        })),
      {
        get firstHiddenTime() {
          return S;
        },
      }
    );
  },
  C = function (n) {
    document.prerendering
      ? addEventListener(
          "prerenderingchange",
          function () {
            return n();
          },
          !0
        )
      : n();
  },
  Q = [1800, 3e3],
  ee = function (n, e) {
    var t = w((e = e || {}));
    C(function () {
      var a,
        o = z(),
        i = h("FCP"),
        r = y(
          "paint",
          function (u) {
            u.forEach(function (c) {
              if (c.name === "first-contentful-paint") {
                t
                  ? (c.navigationId || 1) > 1 &&
                    ((d = "soft-navigation"),
                    (p = c.navigationId),
                    (i = h("FCP", 0, d, p)),
                    (a = l(n, i, Q, e.reportAllChanges)))
                  : r.disconnect();
                var f = 0;
                if (c.navigationId && c.navigationId !== 1) {
                  var v = Y(c.navigationId),
                    s = (v == null ? void 0 : v.startTime) || 0;
                  f = Math.max(c.startTime - s, 0);
                } else f = Math.max(c.startTime - k(), 0);
                (c.startTime < o.firstHiddenTime ||
                  (c.navigationId && c.navigationId > 1)) &&
                  ((i.value = f),
                  i.entries.push(c),
                  (i.navigationId = c.navigationId || 1),
                  a(!0));
              }
              var d, p;
            });
          },
          e
        );
      r &&
        ((a = l(n, i, Q, e.reportAllChanges)),
        E(function (u) {
          (i = h("FCP", 0, "back-forward-cache", i.navigationId)),
            (a = l(n, i, Q, e.reportAllChanges)),
            N(function () {
              (i.value = performance.now() - u.timeStamp), a(!0);
            });
        }));
    });
  },
  $ = [0.1, 0.25],
  fe = function (n, e) {
    var t,
      a,
      o = w((e = e || {})),
      i = !1;
    ee(
      ((t = function () {
        var r,
          u = h("CLS", 0),
          c = 0,
          f = [],
          v = function (p, g) {
            (u = h("CLS", 0, p, g)),
              (r = l(n, u, $, e.reportAllChanges)),
              (c = 0),
              (i = !1);
          },
          s = function (p) {
            p.forEach(function (g) {
              if (
                (o &&
                  g.navigationId &&
                  g.navigationId > u.navigationId &&
                  (c > u.value && ((u.value = c), (u.entries = f)),
                  r(!0),
                  v("soft-navigation", g.navigationId)),
                !g.hadRecentInput)
              ) {
                var re = f[0],
                  ce = f[f.length - 1];
                c &&
                g.startTime - ce.startTime < 1e3 &&
                g.startTime - re.startTime < 5e3
                  ? ((c += g.value), f.push(g))
                  : ((c = g.value), (f = [g]));
              }
            }),
              c > u.value && ((u.value = c), (u.entries = f), r());
          },
          d = y("layout-shift", s, e);
        d &&
          ((r = l(n, u, $, e.reportAllChanges)),
          M(function () {
            s(d.takeRecords()), r(!0), (i = !0);
          }),
          E(function () {
            v("back-forward-cache", u.navigationId),
              N(function () {
                return r();
              });
          }),
          o &&
            y(
              "soft-navigation",
              function (p) {
                p.forEach(function (g) {
                  g.navigationId &&
                    g.navigationId > u.navigationId &&
                    (i || r(!0),
                    v("soft-navigation", g.navigationId),
                    (r = l(n, u, $, e.reportAllChanges)));
                });
              },
              e
            ),
          setTimeout(r, 0));
      }),
      (a = !1),
      function (r) {
        a || (t(r), (a = !0));
      })
    );
  },
  _ = { passive: !0, capture: !0 },
  ve = /* @__PURE__ */ new Date(),
  V = function (n, e) {
    T ||
      ((T = e),
      (A = n),
      (W = /* @__PURE__ */ new Date()),
      te(removeEventListener),
      ne());
  },
  ne = function () {
    if (A >= 0 && A < W - ve) {
      var n = {
        entryType: "first-input",
        name: T.type,
        target: T.target,
        cancelable: T.cancelable,
        startTime: T.timeStamp,
        processingStart: T.timeStamp + A,
      };
      F.forEach(function (e) {
        e([n]);
      }),
        (F = []);
    }
  },
  ge = function (n) {
    if (n.cancelable) {
      var e =
        (n.timeStamp > 1e12 ? /* @__PURE__ */ new Date() : performance.now()) -
        n.timeStamp;
      n.type == "pointerdown"
        ? (function (t, a) {
            var o = function () {
                V(t, a), r();
              },
              i = function () {
                r();
              },
              r = function () {
                removeEventListener("pointerup", o, _),
                  removeEventListener("pointercancel", i, _);
              };
            addEventListener("pointerup", o, _),
              addEventListener("pointercancel", i, _);
          })(e, n)
        : V(e, n);
    }
  },
  te = function (n) {
    ["mousedown", "keydown", "touchstart", "pointerdown"].forEach(function (e) {
      return n(e, ge, _);
    });
  },
  x = [100, 300],
  le = function (n, e) {
    var t = w((e = e || {}));
    C(function () {
      var a,
        o = z(),
        i = h("FID"),
        r = function (c) {
          c.forEach(function (f) {
            var v, s;
            t
              ? (f.navigationId || 1) > 1 &&
                ((v = "soft-navigation"),
                (s = f.navigationId),
                (i = h("FID", 0, v, s)),
                (a = l(n, i, x, e.reportAllChanges)))
              : u.disconnect(),
              f.startTime < o.firstHiddenTime &&
                ((i.value = f.processingStart - f.startTime),
                i.entries.push(f),
                (i.navigationId = f.navigationId || 1),
                a(!0));
          });
        },
        u = y("first-input", r, e);
      (a = l(n, i, x, e.reportAllChanges)),
        u &&
          M(function () {
            r(u.takeRecords()), t || u.disconnect();
          }),
        u &&
          E(function () {
            var c;
            (i = h("FID", 0, "back-forward-cache", i.navigationId)),
              (a = l(n, i, x, e.reportAllChanges)),
              (F = []),
              (A = -1),
              (T = null),
              te(addEventListener),
              (c = r),
              F.push(c),
              ne();
          });
    });
  },
  R = 0,
  L = 1 / 0,
  b = 0,
  j = 1,
  ie = !1,
  pe = function (n) {
    n.forEach(function (e) {
      e.interactionId &&
        (ie &&
          e.navigationId &&
          e.navigationId > j &&
          ((j = e.navigationId), (R = 0), (L = 1 / 0), (b = 0)),
        (L = Math.min(L, e.interactionId)),
        (b = Math.max(b, e.interactionId)),
        (R = b ? (b - L) / 7 + 1 : 0));
    });
  },
  ae = function () {
    return D ? R : performance.interactionCount || 0;
  },
  he = function (n) {
    "interactionCount" in performance ||
      D ||
      ((ie = n || !1),
      (D = y("event", pe, {
        type: "event",
        buffered: !0,
        durationThreshold: 0,
        includeSoftNavigationObservations: n,
      })));
  },
  B = [200, 500],
  oe = 0,
  Z = function () {
    return ae() - oe;
  },
  I = [],
  O = {},
  G = function (n) {
    var e = I[I.length - 1],
      t = O[n.interactionId];
    if (t || I.length < 10 || n.duration > e.latency) {
      if (t) t.entries.push(n), (t.latency = Math.max(t.latency, n.duration));
      else {
        var a = { id: n.interactionId, latency: n.duration, entries: [n] };
        (O[a.id] = a), I.push(a);
      }
      I.sort(function (o, i) {
        return i.latency - o.latency;
      }),
        I.splice(10).forEach(function (o) {
          delete O[o.id];
        });
    }
  },
  me = function (n, e) {
    var t = w((e = e || {})),
      a = !1;
    C(function () {
      he(t);
      var o,
        i = h("INP"),
        r = function (v, s) {
          (I = []),
            (oe = v === "soft-navigation" ? 0 : ae()),
            (i = h("INP", 0, v, s)),
            (o = l(n, i, B, e.reportAllChanges)),
            (a = !1);
        },
        u = function () {
          var v,
            s,
            d = ((s = Math.min(I.length - 1, Math.floor(Z() / 50))), I[s]);
          d &&
            (d.latency !== i.value ||
              ((v = e) !== null && v !== void 0 && v.reportAllChanges)) &&
            ((i.value = d.latency), (i.entries = d.entries));
        },
        c = function (v) {
          v.forEach(function (s) {
            t &&
              s.navigationId &&
              s.navigationId > i.navigationId &&
              (a || (u(), i.value > 0 && o(!0)),
              r("soft-navigation", s.navigationId)),
              s.interactionId && G(s),
              s.entryType === "first-input" &&
                !I.some(function (d) {
                  return d.entries.some(function (p) {
                    return (
                      s.duration === p.duration && s.startTime === p.startTime
                    );
                  });
                }) &&
                G(s);
          }),
            u(),
            o();
        },
        f = y("event", c, {
          durationThreshold: e.durationThreshold || 40,
          opts: e,
        });
      (o = l(n, i, B, e.reportAllChanges)),
        f &&
          (f.observe({
            type: "first-input",
            buffered: !0,
            includeSoftNavigationObservations: t,
          }),
          M(function () {
            c(f.takeRecords()),
              i.value < 0 && Z() > 0 && ((i.value = 0), (i.entries = [])),
              o(!0);
          }),
          E(function () {
            r("back-forward-cache", i.navigationId),
              N(function () {
                return o();
              });
          }),
          t &&
            y(
              "soft-navigation",
              function (v) {
                v.forEach(function (s) {
                  s.navigationId &&
                    s.navigationId > i.navigationId &&
                    (!a && i.value > 0 && o(!0),
                    r("soft-navigation", s.navigationId),
                    (o = l(n, i, B, e.reportAllChanges)));
                });
              },
              e
            ));
    });
  },
  K = [2500, 4e3],
  Ie = function (n, e) {
    var t = !1,
      a = w((e = e || {}));
    C(function () {
      var o,
        i = z(),
        r = h("LCP"),
        u = function (s, d) {
          (r = h("LCP", 0, s, d)),
            (o = l(n, r, K, e.reportAllChanges)),
            (t = !1);
        },
        c = function (s) {
          s.forEach(function (d) {
            if (d) {
              d.navigationId &&
                d.navigationId > r.navigationId &&
                (t || o(!0), u("soft-navigation", d.navigationId));
              var p,
                g = 0;
              d.navigationId !== 1 && d.navigationId
                ? (g = Math.max(
                    d.startTime -
                      (((p = Y(d.navigationId)) === null || p === void 0
                        ? void 0
                        : p.startTime) || 0),
                    0
                  ))
                : (g = Math.max(d.startTime - k(), 0)),
                d.startTime < i.firstHiddenTime &&
                  ((r.value = g),
                  (r.entries = [d]),
                  (r.navigationId = d.navigationId || 1),
                  o());
            }
          });
        },
        f = function () {
          t || (c(v.takeRecords()), a || v.disconnect(), (t = !0), o(!0));
        },
        v = y("largest-contentful-paint", c, e);
      v &&
        ((o = l(n, r, K, e.reportAllChanges)),
        ["keydown", "click"].forEach(function (s) {
          addEventListener(s, f, !0);
        }),
        M(f),
        E(function (s) {
          u("back-forward-cache", r.navigationId),
            N(function () {
              (r.value = performance.now() - s.timeStamp), (t = !0), o(!0);
            });
        }),
        a &&
          y(
            "soft-navigation",
            function (s) {
              s.forEach(function (d) {
                d.navigationId &&
                  d.navigationId > r.navigationId &&
                  (t || o(!0), u("soft-navigation", d.navigationId));
              });
            },
            e
          ));
    });
  },
  q = [800, 1800],
  ye = function n(e) {
    document.prerendering
      ? C(function () {
          return n(e);
        })
      : document.readyState !== "complete"
      ? addEventListener(
          "load",
          function () {
            return n(e);
          },
          !0
        )
      : setTimeout(e, 0);
  },
  Te = function (n, e) {
    var t = w((e = e || {})),
      a = h("TTFB"),
      o = l(n, a, q, e.reportAllChanges);
    ye(function () {
      var i = H();
      if (i) {
        var r = i.responseStart;
        if (r <= 0 || r > performance.now()) return;
        (a.value = Math.max(r - k(), 0)),
          (a.entries = [i]),
          o(!0),
          E(function () {
            (a = h("TTFB", 0, "back-forward-cache", a.navigationId)),
              (o = l(n, a, q, e.reportAllChanges))(!0);
          }),
          t &&
            y(
              "soft-navigation",
              function (u) {
                u.forEach(function (c) {
                  c.navigationId &&
                    ((a = h("TTFB", 0, "soft-navigation", c.navigationId)),
                    (o = l(n, a, q, e.reportAllChanges))(!0));
                });
              },
              e
            );
      }
    });
  },
  Ee = function (n) {
    return { evid: 180, src: 72, endpoint: "pulse", params: n };
  };
const we = [
    // GUID
    [
      /\/[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}(\/|$)/g,
      "/:guid$1",
    ],
    // Hexa ID
    [/\/[0-9a-fA-F]{24,}(\/|$)/g, "/:id$1"],
    // Numeric ID
    [/\/[0-9]{12}(\/|$)/g, "/:id$1"],
    // Date
    [/\/[0-9]{4}-[0-9]{2}-[0-9]{2}(\/|$)/g, "/:date$1"],
    // Form submission
    [/\/comp-[a-zA-Z0-9]{8}(\/|$)/g, "/:id$1"],
    // Remove trailing slash
    [/\/$/, ""],
  ],
  Se = (n) => {
    const e = new URL(n);
    return (
      we.forEach(([t, a]) => {
        e.pathname = e.pathname.replace(t, a);
      }),
      (e.search = ""),
      e.toString()
    );
  };
class be {
  constructor(e, t, a, o) {
    m(this, "_queue", /* @__PURE__ */ new Set());
    m(this, "_logger");
    m(this, "_url");
    m(this, "_platform");
    m(this, "_metadata");
    m(this, "_viewerSpecificProperties");
    var i, r, u;
    (this._url = Se(e)),
      (this._platform = t),
      (this._logger = a),
      (this._metadata = o),
      (this._viewerSpecificProperties = {
        vsi: (i = o.vsi) == null ? void 0 : i.toString(),
        sessionId: (r = o.sessionId) == null ? void 0 : r.toString(),
        msid: (u = o.msid) == null ? void 0 : u.toString(),
      });
  }
  flushQueue() {
    if (this._queue.size > 0) {
      const e = {};
      this._queue.forEach(({ name: t, value: a }) => {
        e[t] = a;
      });
      try {
        const t = JSON.stringify(e),
          a = JSON.stringify(this._metadata);
        this._logger.report(
          Ee({
            platform: this._platform,
            url: this._url,
            webVitals: t,
            metadata: a,
            ...this._viewerSpecificProperties,
          })
        );
      } catch (t) {
        console.error(t);
      }
      this._queue.clear();
    }
  }
  addToQueue(e) {
    const { name: t, value: a } = e;
    this._queue.add({ name: t, value: a });
  }
}
class Ae {
  constructor(e, t, a = {}) {
    m(this, "_platform");
    m(this, "_logger");
    m(this, "_metadata");
    (this._platform = e),
      (this._logger = t),
      (this._metadata = a),
      this._init();
  }
  _init() {
    const e = new be(
      window.location.href,
      this._platform,
      this._logger,
      this._metadata
    );
    Te((t) => e.addToQueue(t), { reportSoftNavs: !0 }),
      ee((t) => e.addToQueue(t), { reportSoftNavs: !0 }),
      Ie((t) => e.addToQueue(t), { reportSoftNavs: !0 }),
      fe((t) => e.addToQueue(t), { reportSoftNavs: !0 }),
      le((t) => e.addToQueue(t), { reportSoftNavs: !0 }),
      me((t) => e.addToQueue(t), { reportSoftNavs: !0 }),
      addEventListener("visibilitychange", () => {
        document.visibilityState === "hidden" && e.flushQueue();
      }),
      addEventListener("pagehide", e.flushQueue);
  }
}
export { Ae as Pulse };
