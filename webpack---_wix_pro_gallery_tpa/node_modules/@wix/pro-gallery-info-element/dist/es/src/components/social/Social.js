import { __assign, __extends } from "tslib";
import React from "react";
import { GALLERY_v4_CONSTS } from "@wix/photography-client-lib";
import LoveButton from "../loveButton/LoveButton.js";
import ShareStoreIcon from "../svgs/components/share_store";
import Download from "../download/Download";
import { getFinalStyle } from "../sharedBetweenInfoComponents";
var Social = /** @class */ (function (_super) {
  __extends(Social, _super);
  function Social() {
    return (_super !== null && _super.apply(this, arguments)) || this;
  }
  Social.prototype.getSocialShare = function () {
    var _a = this.props,
      options = _a.options,
      id = _a.id,
      actions = _a.actions;
    if (options.allowSocial) {
      var shareButton = React.createElement(
        "i",
        { className: "share-store" },
        React.createElement(ShareStoreIcon, null)
      );
      var socialShareClassName =
        "info-member info-element-social-share info-element-social-button";
      if (
        this.props.viewMode === GALLERY_v4_CONSTS.viewMode.SITE ||
        this.props.viewMode === GALLERY_v4_CONSTS.viewMode.SEO
      ) {
        var slideshowShare =
          !this.props.shouldUseNewSocialSharePopup &&
          GALLERY_v4_CONSTS.isLayout("SLIDESHOW")(options)
            ? actions.getShare()
            : "";
        return React.createElement(
          "div",
          {
            className: socialShareClassName,
            "data-hook": "info-element-social-button",
            key: "item-social-share-" + id,
            onClick: function (e) {
              return actions.toggleShare(e, true);
            },
          },
          shareButton,
          slideshowShare
        );
      } else {
        return React.createElement(
          "div",
          {
            className: socialShareClassName,
            "data-hook": "info-element-social-button",
            key: "item-social-share-" + id,
            onClick: function (e) {
              e.stopPropagation();
              e.preventDefault();
            },
          },
          shareButton
        );
      }
    }
    return "";
  };
  Social.prototype.getLoveButton = function () {
    var _a = this.props,
      options = _a.options,
      isNarrow = _a.isNarrow,
      isSmallItem = _a.isSmallItem;
    return options.loveButton
      ? React.createElement(
          LoveButton,
          __assign({}, this.props, {
            itemId: this.props.photoId,
            showCounter: options.loveCounter && !isSmallItem && !isNarrow,
          })
        )
      : null;
  };
  Social.prototype.getDownload = function () {
    var _a = this.props,
      options = _a.options,
      isDemo = _a.isDemo,
      viewMode = _a.viewMode;
    if (
      options.allowDownload &&
      !(
        (viewMode === GALLERY_v4_CONSTS.viewMode.SITE ||
          viewMode === GALLERY_v4_CONSTS.viewMode.SEO) &&
        isDemo
      )
    ) {
      return React.createElement(Download, __assign({}, this.props));
    }
    return null;
  };
  Social.prototype.render = function () {
    var _a = this.props,
      isNewInfoElements = _a.isNewInfoElements,
      options = _a.options,
      id = _a.id,
      showShare = _a.showShare,
      isSmallItem = _a.isSmallItem,
      isNarrow = _a.isNarrow,
      isShort = _a.isShort,
      isVerticalContainer = _a.isVerticalContainer;
    var socialShare = this.getSocialShare();
    var loveButton = this.getLoveButton();
    var download = this.getDownload();
    // var shopIcons = this.getShopIcons();
    var isShowArrows = options.hasThumbnails;
    var isPopulated =
      options.allowSocial || options.loveButton || options.allowDownload;
    var textPlacementAboveOrBelowOrRightOrLeft =
      this.props.internalOrExternal === "external" ||
      GALLERY_v4_CONSTS.hasExternalHorizontalPlacement(
        options.titlePlacement
      ) ||
      GALLERY_v4_CONSTS.hasExternalVerticalPlacement(options.titlePlacement);
    var classes = [
      [showShare && !isNewInfoElements, "hidden"],
      [isSmallItem, "small-item"],
      [isShort, "short-item"],
      [isNarrow, "narrow-item"],
      [isVerticalContainer, "vertical-item"],
      [isShowArrows, "with-arrows"],
      [isPopulated, "populated-item"],
      [textPlacementAboveOrBelowOrRightOrLeft, "text-external-item"],
      [!isNewInfoElements, "info-element-social-absolute"],
      [isNewInfoElements, "info-element-social-new-info-elements"],
    ]
      .filter(function (x) {
        return x[0];
      })
      .map(function (x) {
        return x[1];
      })
      .join(" ");
    // Style didnt exist on the div so I need to have the ternary here as well
    var finalStyle = isNewInfoElements == null ? {} : getFinalStyle(this.props);
    // if(this.props.isNewInfoElements){
    //   finalStyle.display = 'flex'
    //   finalStyle.justifyContent = {
    //     'left': 'flex-start',
    //     'center': 'center',
    //     'right': 'flex-end',
    //   }[this.props.horizontalAlignment]
    // }
    return React.createElement(
      "div",
      {
        style: finalStyle,
        className:
          "info-element-social info-align-" +
          options.galleryTextAlign +
          " " +
          classes,
        key: "item-social-" + id,
        "data-hook": "item-social",
      },
      loveButton,
      download,
      socialShare
    );
  };
  return Social;
})(React.Component);
export default Social;
//# sourceMappingURL=Social.js.map
