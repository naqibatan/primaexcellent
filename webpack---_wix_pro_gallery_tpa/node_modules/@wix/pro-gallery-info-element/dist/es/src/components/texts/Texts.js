import { __assign, __extends } from "tslib";
import React from "react";
import { GALLERY_v4_CONSTS } from "@wix/photography-client-lib";
import { utils } from "../../common/utils/utils";
import CustomButton from "../buttons/CustomButton.js";
import Title from "./Title.js";
import Description from "./Description.js";
import lineHeightFixer from "./LineHeightFixer.js";
import {
  getDuplicatedCss,
  shouldAddLegacyPaddingBottom,
  designConsts,
} from "@wix/photography-client-lib";
var Texts = /** @class */ (function (_super) {
  __extends(Texts, _super);
  function Texts(props) {
    var _this = _super.call(this, props) || this;
    _this.debouncedTryFixLineHeight = utils
      .debounce(_this.tryFixLineHeight.bind(_this), 500)
      .bind(_this);
    return _this;
  }
  Texts.prototype.getTextsClassNames = function () {
    var _a = this.props,
      showShare = _a.showShare,
      isNarrow = _a.isNarrow;
    var classNames = ["info-element-text"];
    if (showShare) {
      classNames.push("hidden");
    }
    if (isNarrow) {
      classNames.push("narrow-item");
    }
    return classNames.join(" ");
  };
  Texts.prototype.getTextsStyles = function () {
    var _a = this.props,
      options = _a.options,
      style = _a.style;
    var textsStyles = {
      alignItems: options.galleryHorizontalAlign,
      textAlign: options.galleryTextAlign,
    };
    if (
      GALLERY_v4_CONSTS.hasExternalVerticalPlacement(options.titlePlacement)
    ) {
      textsStyles = __assign(
        __assign({}, textsStyles),
        getDuplicatedCss(options)
      );
    }
    // Horizontal placement is not yet implemented in wix editor, but the gallery support it (for example in the designed presets)
    if (
      GALLERY_v4_CONSTS.hasExternalHorizontalPlacement(options.titlePlacement)
    ) {
      textsStyles = __assign(
        __assign(__assign({}, textsStyles), getDuplicatedCss(options)),
        {
          display: "flex",
          flexDirection: "column",
          justifyContent: options.galleryVerticalAlign,
        }
      );
    }
    if (GALLERY_v4_CONSTS.hasHoverPlacement(options.titlePlacement)) {
      textsStyles = __assign(__assign({}, textsStyles), {
        display: "flex",
        justifyContent: options.galleryVerticalAlign,
        alignContent: options.galleryVerticalAlign,
      });
    }
    if (GALLERY_v4_CONSTS.isLayout("SLIDESHOW")(options)) {
      textsStyles = __assign(__assign({}, textsStyles), { paddingTop: "0px" });
    }
    var isCentered = style.justifyContent === "center";
    if (shouldAddLegacyPaddingBottom(this.props)) {
      // Set the texts fixed height considering the height of the love and share buttons which is about 100px;
      textsStyles.paddingBottom = 70;
    }
    if (isCentered) {
      textsStyles.marginTop = style.height / 15;
    }
    if (options.isRTL) {
      textsStyles.direction = "rtl";
    } else {
      textsStyles.direction = "ltr";
    }
    return textsStyles;
  };
  Texts.prototype.getItemTexts = function () {
    var _this = this;
    var _a = this.props,
      title = _a.title,
      description = _a.description,
      id = _a.id,
      options = _a.options,
      style = _a.style,
      isNarrow = _a.isNarrow,
      shouldShowButton = _a.shouldShowButton,
      container = _a.container;
    var shouldShowTitle = title && options.allowTitle;
    var shouldShowDescription = description && options.allowDescription;
    var titleStyle, descStyle;
    var titleMarginBottom;
    if (shouldShowDescription) {
      titleMarginBottom = options.titleDescriptionSpace;
    } else if (shouldShowButton) {
      titleMarginBottom = designConsts.spaceBetweenElements;
    } else {
      titleMarginBottom = 0;
    }
    titleStyle = {
      overflow: "visible",
      marginBottom: titleMarginBottom,
    };
    if (shouldShowButton) {
      descStyle = { marginBottom: designConsts.spaceBetweenElements };
    } else {
      descStyle = { marginBottom: 0 };
    }
    if (
      GALLERY_v4_CONSTS.isLayout("SLIDESHOW")(options) &&
      container &&
      container.galleryWidth &&
      container.galleryWidth < 800
    ) {
      var maxWidth = container.galleryWidth;
      if (options.allowSlideshowCounter) {
        maxWidth -= 30;
      }
      if (options.playButtonForAutoSlideShow) {
        maxWidth -= 30;
      }
      titleStyle.maxWidth = maxWidth;
      descStyle.maxWidth = maxWidth;
    }
    var titleElem =
      shouldShowTitle &&
      React.createElement(Title, {
        key: "item-title-" + id,
        title: title,
        style: titleStyle,
      });
    var descriptionElem =
      shouldShowDescription &&
      React.createElement(Description, {
        key: "item-description-" + id,
        description: description,
        style: descStyle,
      });
    var buttonElem =
      shouldShowButton &&
      React.createElement(CustomButton, {
        type: "button",
        options: options,
        style: style,
        small: isNarrow,
        actions: {
          eventsListener: this.props.actions.eventsListener,
        },
      });
    var shouldHideElement = !titleElem && !descriptionElem && !buttonElem;
    if (shouldHideElement) {
      return null;
    }
    var textsStyles = this.getTextsStyles();
    var textsClassNames = this.getTextsClassNames();
    var allTextsElements = React.createElement(
      React.Fragment,
      null,
      titleElem,
      descriptionElem,
      buttonElem
    );
    return React.createElement(
      "div",
      {
        style: textsStyles,
        ref: function (x) {
          return (_this.container = x);
        },
        className: textsClassNames,
        dir: "auto",
      },
      GALLERY_v4_CONSTS.isLayout("SLIDESHOW")(options)
        ? allTextsElements
        : React.createElement("div", null, allTextsElements) // wrapped with div for flex alignment purposes
    );
  };
  Texts.prototype.tryFixLineHeight = function () {
    var _this = this;
    var isFixed = lineHeightFixer.fix(this.props, this.container);
    if (!isFixed) {
      setTimeout(function () {
        lineHeightFixer.fix(_this.props, _this.container);
      }, 1000); // waiting for wix inline styles to take affect
    }
  };
  Texts.prototype.componentDidUpdate = function (prevProps) {
    if (lineHeightFixer.shouldFix(prevProps, this.props)) {
      this.debouncedTryFixLineHeight();
    }
  };
  Texts.prototype.componentDidMount = function () {
    this.tryFixLineHeight();
  };
  Texts.prototype.render = function () {
    return this.getItemTexts();
  };
  return Texts;
})(React.Component);
export default Texts;
//# sourceMappingURL=Texts.js.map
