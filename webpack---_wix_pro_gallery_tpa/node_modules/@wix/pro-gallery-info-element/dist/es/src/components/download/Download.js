import { __assign, __awaiter, __extends, __generator } from "tslib";
import React from "react";
import { GALLERY_v4_CONSTS } from "@wix/photography-client-lib";
import INFO_EVENTS from "../../common/constants/infoEvents";
import {
  window,
  customDownloadUrlThrottleDownload,
} from "@wix/photography-client-lib";
import DownloadIcon from "../svgs/components/download";
var Download = /** @class */ (function (_super) {
  __extends(Download, _super);
  function Download(props) {
    var _this = _super.call(this, props) || this;
    _this.onDownloadClick = _this.onDownloadClick.bind(_this);
    _this.onDownloadKeyPress = _this.onDownloadKeyPress.bind(_this);
    _this.onDownloadImageVideoKeyPress =
      _this.onDownloadImageVideoKeyPress.bind(_this);
    _this.onDownloadTextKeyPress = _this.onDownloadTextKeyPress.bind(_this);
    _this.getAdditionalAttributes = _this.getAdditionalAttributes.bind(_this);
    return _this;
  }
  Download.prototype.onDownloadImageVideoKeyPress = function (e, downloadLink) {
    switch (e.keyCode || e.charCode) {
      case 32: // space
      case 13: // enter
        e.stopPropagation();
        e.preventDefault();
        window.open(downloadLink, "_blank");
        this.props.actions.eventsListener(
          INFO_EVENTS.DOWNLOAD_BUTTON_CLICKED,
          this.props
        );
        return false;
      default:
        break;
    }
  };
  Download.prototype.onDownloadTextKeyPress = function (e) {
    switch (e.keyCode || e.charCode) {
      case 32: // space
      case 13: // enter
        e.stopPropagation();
        e.preventDefault();
        this.props.actions.eventsListener(
          INFO_EVENTS.TEXT_DOWNLOAD_BUTTON_CLICKED,
          this.props
        );
        return false;
      default:
        break;
    }
  };
  Download.prototype.onDownloadClick = function (e, downloadLink) {
    return __awaiter(this, void 0, void 0, function () {
      var _a,
        type,
        isDemo,
        actions,
        customDownloadUrl,
        downloadUrl,
        _b,
        url,
        photoId;
      return __generator(this, function (_c) {
        (_a = this.props),
          (type = _a.type),
          (isDemo = _a.isDemo),
          (actions = _a.actions),
          (customDownloadUrl = _a.customDownloadUrl);
        if (type === "text") {
          e.stopPropagation();
          e.preventDefault();
          actions.eventsListener(
            INFO_EVENTS.TEXT_DOWNLOAD_BUTTON_CLICKED,
            this.props
          );
        } else if (!isDemo) {
          // not text && not Demo
          e.stopPropagation();
          e.preventDefault();
          downloadUrl = downloadLink;
          if (customDownloadUrl) {
            (_b = this.props), (url = _b.url), (photoId = _b.photoId);
            customDownloadUrlThrottleDownload(customDownloadUrl, url, photoId);
          } else {
            window.open(downloadUrl, "_blank");
          }
          this.props.actions.eventsListener(
            INFO_EVENTS.DOWNLOAD_BUTTON_CLICKED,
            this.props
          );
        }
        return [2 /*return*/];
      });
    });
  };
  Download.prototype.onDownloadKeyPress = function (e, downloadLink) {
    var _a = this.props,
      type = _a.type,
      isDemo = _a.isDemo;
    if (type === "text") {
      this.onDownloadTextKeyPress(e);
    } else if (!isDemo) {
      this.onDownloadImageVideoKeyPress(e, downloadLink);
    }
  };
  Download.prototype.getAdditionalAttributes = function (downloadLink) {
    if (this.props.type === "text") {
      return {};
    }
    var additionals = { download: "download" };
    if (!this.props.isDemo) {
      additionals.target = "_blank";
      additionals.href = downloadLink;
    }
    return additionals;
  };
  Download.prototype.render = function () {
    var _this = this;
    var _a = this.props,
      options = _a.options,
      isDemo = _a.isDemo,
      createUrl = _a.createUrl;
    var downloadClassName =
      "info-member info-element-social-download " +
      (options.allowSocial ? "" : " pull-right ") +
      " info-element-social-button";
    var downloadIcon = React.createElement(
      "i",
      { className: isDemo ? " inactive" : "" },
      React.createElement(DownloadIcon, { size: "20" })
    );
    var downloadUrl = options.isStoreGallery
      ? GALLERY_v4_CONSTS.urlSizes.DOWNLOAD_SAMPLE
      : GALLERY_v4_CONSTS.urlSizes.DOWNLOAD;
    var downloadLink =
      createUrl(downloadUrl, GALLERY_v4_CONSTS.urlTypes.VIDEO) ||
      createUrl(downloadUrl, GALLERY_v4_CONSTS.urlTypes.HIGH_RES);
    return React.createElement(
      "div",
      __assign(
        {
          className: downloadClassName,
          "data-hook": "item-download",
          "aria-label": "Download",
          role: "button",
          tabIndex:
            GALLERY_v4_CONSTS.isLayout("SLIDESHOW")(options) &&
            this.props.activeIndex === this.props.idx
              ? 0
              : -1,
          onClick: function (e) {
            return _this.onDownloadClick(e, downloadLink);
          },
          onKeyDown: function (e) {
            return _this.onDownloadKeyPress(e, downloadLink);
          },
        },
        this.getAdditionalAttributes(downloadLink)
      ),
      downloadIcon
    );
  };
  return Download;
})(React.Component);
export default Download;
//# sourceMappingURL=Download.js.map
