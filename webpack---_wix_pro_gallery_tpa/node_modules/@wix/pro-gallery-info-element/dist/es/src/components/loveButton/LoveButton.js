import { __assign, __extends } from "tslib";
import React from "react";
import { GALLERY_v4_CONSTS } from "@wix/photography-client-lib";
import INFO_EVENTS from "../../common/constants/infoEvents";
import LoveFull from "../svgs/components/love_full";
import LoveEmpty from "../svgs/components/love_empty";
var LoveButton = /** @class */ (function (_super) {
  __extends(LoveButton, _super);
  function LoveButton(props) {
    var _this = _super.call(this, props) || this;
    _this.toggleLove = _this.toggleLove.bind(_this);
    _this.onKeyPress = _this.onKeyPress.bind(_this);
    _this.getMobileEnabledClick = _this.getMobileEnabledClick.bind(_this);
    _this.state = {
      animate: false,
    };
    return _this;
  }
  LoveButton.prototype.onKeyPress = function (e) {
    switch (e.keyCode || e.charCode) {
      case 32: // space
      case 13: // enter
        e.preventDefault();
        e.stopPropagation();
        this.toggleLove(e);
        return false;
      default:
        break;
    }
  };
  LoveButton.prototype.toggleLove = function (e) {
    e.stopPropagation();
    e.preventDefault();
    this.props.actions.eventsListener(
      INFO_EVENTS.LOVE_BUTTON_CLICKED,
      this.props
    );
    this.setState({
      animate: !this.props.isLoved,
    });
  };
  LoveButton.prototype.buttonClasssName = function () {
    var className = [];
    className.push("info-element-social-love");
    if (this.props.isLoved) {
      className.push("love_full info-element-loved");
    } else {
      className.push("love_empty");
    }
    if (this.state.animate) {
      className.push("love-animation");
    }
    return className.join(" ");
  };
  LoveButton.prototype.getMobileEnabledClick = function (action) {
    return this.props.isMobile ? { onTouchEnd: action } : { onClick: action };
  };
  LoveButton.prototype.createLoveCounter = function () {
    var count = this.props.loveCount || 0;
    return !!this.props.showCounter && count > 0
      ? React.createElement(
          "i",
          {
            "data-hook": "love-counter",
            className: "info-member info-element-social-love-count",
          },
          count
        )
      : null;
  };
  LoveButton.prototype.render = function () {
    var loveCounter = this.props.customLoveCounter || this.createLoveCounter();
    var clickAction =
      this.props.viewMode === GALLERY_v4_CONSTS.viewMode.SITE ||
      this.props.viewMode === GALLERY_v4_CONSTS.viewMode.SEO
        ? this.getMobileEnabledClick(this.toggleLove)
        : {
            onClick: function (e) {
              return e.stopPropagation();
            },
          };
    var loveColor = this.props.isLoved ? { color: "red" } : {};
    return React.createElement(
      "span",
      __assign(
        {
          className:
            "info-member info-element-social-love info-element-social-button",
          "data-hook": "love-button",
        },
        clickAction,
        {
          onKeyDown: this.onKeyPress,
          tabIndex:
            GALLERY_v4_CONSTS.isLayout("SLIDESHOW")(this.props.options) &&
            this.props.activeIndex === this.props.idx
              ? 0
              : -1,
          role: "checkbox",
          "aria-checked": this.props.isLoved,
          "aria-label": "Love",
        }
      ),
      React.createElement(
        "button",
        {
          "data-hook": "love-icon",
          className: this.buttonClasssName(),
          style: loveColor,
          tabIndex: -1,
        },
        this.props.isLoved
          ? React.createElement(LoveFull, null)
          : React.createElement(LoveEmpty, null)
      ),
      loveCounter
    );
  };
  return LoveButton;
})(React.Component);
export default LoveButton;
//# sourceMappingURL=LoveButton.js.map
