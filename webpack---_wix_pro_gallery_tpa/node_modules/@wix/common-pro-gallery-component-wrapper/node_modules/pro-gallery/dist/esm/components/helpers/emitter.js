import { __spreadArrays } from "tslib";
import { proxy } from "./proxy";
var Emitter = /** @class */ (function () {
  function Emitter() {
    this.listeners = {};
  }
  Emitter.prototype.on = function (event, listener) {
    var _this = this;
    this.listeners[event] = this.listeners[event] || [];
    this.listeners[event].push(listener);
    return {
      remove: function () {
        _this.off(event, listener);
      },
    };
  };
  Emitter.prototype.emit = function (event) {
    var args = [];
    for (var _i = 1; _i < arguments.length; _i++) {
      args[_i - 1] = arguments[_i];
    }
    var listener = this.listeners[event];
    if (listener) {
      listener.forEach(function (listener) {
        return listener.apply(void 0, args);
      });
    }
  };
  Emitter.prototype.off = function (event, listener) {
    var listeners = this.listeners[event];
    if (listeners) {
      listeners.splice(listeners.indexOf(listener), 1);
    }
  };
  Object.defineProperty(Emitter.prototype, "call", {
    get: function () {
      var _this = this;
      return proxy(function (property) {
        return function () {
          var args = [];
          for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
          }
          _this.emit.apply(_this, __spreadArrays([property], args));
        };
      });
    },
    enumerable: false,
    configurable: true,
  });
  Object.defineProperty(Emitter.prototype, "listen", {
    get: function () {
      var _this = this;
      return proxy(function (property) {
        return function (listener) {
          _this.on(property, listener);
          return function () {
            _this.off(property, listener);
          };
        };
      });
    },
    enumerable: false,
    configurable: true,
  });
  return Emitter;
})();
export default Emitter;
//# sourceMappingURL=emitter.js.map
