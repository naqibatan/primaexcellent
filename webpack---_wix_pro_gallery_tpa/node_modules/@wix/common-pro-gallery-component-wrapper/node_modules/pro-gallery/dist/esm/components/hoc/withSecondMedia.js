import { __assign } from "tslib";
import React from "react";
import { GALLERY_CONSTS } from "pro-gallery-lib";
var withSecondaryMedia = function (WrappedComponent) {
  return function (props) {
    var itemWasHovered = props.itemWasHovered,
      isCurrentHover = props.isCurrentHover,
      hasSecondaryMedia = props.hasSecondaryMedia,
      secondaryMediaItem = props.secondaryMediaItem;
    if (
      props.options.behaviourParams.item.secondaryMedia.trigger ===
        GALLERY_CONSTS.secondaryMediaTrigger.OFF ||
      !hasSecondaryMedia
    ) {
      return React.createElement(WrappedComponent, __assign({}, props));
    }
    var getClasses = function () {
      return ["secondary-media-item", isCurrentHover ? "show" : "hide"].join(
        " "
      );
    };
    var getSecondaryMediaItemProps = function () {
      var createUrl = secondaryMediaItem.createUrl,
        createMagnifiedUrl = secondaryMediaItem.createMagnifiedUrl,
        style = secondaryMediaItem.style,
        html = secondaryMediaItem.html;
      return __assign(__assign({}, props), {
        style: style,
        html: html,
        createUrl: createUrl,
        createMagnifiedUrl: createMagnifiedUrl,
      });
    };
    return React.createElement(
      "div",
      { className: "item-with-secondary-media-container" },
      React.createElement(WrappedComponent, __assign({}, props)),
      React.createElement(
        "div",
        { className: getClasses() },
        itemWasHovered &&
          React.createElement(
            WrappedComponent,
            __assign({}, getSecondaryMediaItemProps())
          )
      )
    );
  };
};
export default withSecondaryMedia;
//# sourceMappingURL=withSecondMedia.js.map
