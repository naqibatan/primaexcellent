import { __assign, __extends } from "tslib";
import React from "react";
import { utils, viewModeWrapper } from "pro-gallery-lib";
// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types
export var ViewModeWrapperHOC = function (WrappedComponent) {
  return /** @class */ (function (_super) {
    __extends(ViewModeWrapperHOC, _super);
    function ViewModeWrapperHOC(props) {
      var _this = _super.call(this, props) || this;
      _this.initViewModeWrapper(props);
      return _this;
    }
    ViewModeWrapperHOC.prototype.initViewModeWrapper = function (props) {
      if (typeof props.viewMode !== "undefined") {
        viewModeWrapper.setViewMode(props.viewMode);
      }
      if (
        typeof props.deviceType !== "undefined" &&
        viewModeWrapper._deviceType !== props.deviceType
      ) {
        utils.dumpCache();
        viewModeWrapper.setDeviceType(props.deviceType);
      }
    };
    ViewModeWrapperHOC.prototype.updateViewModeWrapper = function (nextProps) {
      if (this.props.viewMode !== nextProps.viewMode) {
        utils.dumpCache();
        viewModeWrapper.setViewMode(nextProps.viewMode);
      }
      if (this.props.deviceType !== nextProps.deviceType) {
        utils.dumpCache();
        viewModeWrapper.setDeviceType(nextProps.deviceType);
      }
    };
    ViewModeWrapperHOC.prototype.UNSAFE_componentWillReceiveProps = function (
      nextProps
    ) {
      this.updateViewModeWrapper(nextProps);
    };
    ViewModeWrapperHOC.prototype.render = function () {
      return React.createElement(WrappedComponent, __assign({}, this.props));
    };
    return ViewModeWrapperHOC;
  })(React.Component);
};
//# sourceMappingURL=viewModeWrapper.js.map
