import { window } from "pro-gallery-lib";
// Promise-wrapping class
var Deferred = /** @class */ (function () {
  function Deferred() {
    var _this = this;
    this.promise = new Promise(function (resolve, reject) {
      _this.reject = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
          args[_i] = arguments[_i];
        }
        _this.isPending = false;
        reject.apply(void 0, args);
      };
      _this.resolve = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
          args[_i] = arguments[_i];
        }
        _this.isPending = false;
        resolve.apply(void 0, args);
      };
      _this.isPending = true;
    });
  }
  return Deferred;
})();
export { Deferred };
export function isGalleryInViewport(_a) {
  var container = _a.container,
    scrollTop = _a.scrollTop;
  try {
    var isTopVisible = container.scrollBase < scrollTop + window.innerHeight;
    var isBottomVisible =
      container.scrollBase + container.galleryHeight > scrollTop;
    return isTopVisible && isBottomVisible;
  } catch (e) {
    console.warn("Could not calculate viewport", e);
    return true;
  }
}
//# sourceMappingURL=galleryHelpers.js.map
