import { __awaiter, __generator } from "tslib";
import _ from "lodash";
import { baseUtils } from "./baseUtils";
var customDownloadUrlThrottleDownload = _.throttle(function (
  customDownloadUrl,
  url,
  photoId
) {
  return __awaiter(void 0, void 0, void 0, function () {
    var downloadUrl, error_1;
    return __generator(this, function (_a) {
      switch (_a.label) {
        case 0:
          _a.trys.push([0, 2, , 3]);
          return [4 /*yield*/, customDownloadUrl(url, photoId)];
        case 1:
          downloadUrl = _a.sent();
          if (baseUtils.isiOS()) {
            window.location.href = downloadUrl;
          } else {
            window.open(downloadUrl, "_blank");
          }
          return [3 /*break*/, 3];
        case 2:
          error_1 = _a.sent();
          console.error("Failed to get custom download url", error_1);
          return [3 /*break*/, 3];
        case 3:
          return [2 /*return*/];
      }
    });
  });
},
2000);
export { customDownloadUrlThrottleDownload };
//# sourceMappingURL=downloadLinkUtils.js.map
