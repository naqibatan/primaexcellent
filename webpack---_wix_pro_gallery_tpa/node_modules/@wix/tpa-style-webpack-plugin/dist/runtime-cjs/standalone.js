"use strict";
var __assign =
  (this && this.__assign) ||
  function () {
    __assign =
      Object.assign ||
      function (t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
      };
    return __assign.apply(this, arguments);
  };
Object.defineProperty(exports, "__esModule", { value: true });
exports.generateTPAParamsFromStyleParams =
  exports.getComponentCssVariables =
  exports.getSiteCssVariables =
  exports.getBuildTimeStaticCss =
  exports.getStaticCssWithConfig =
  exports.getProcessedCssWithConfig =
  exports.getProcessedCssWithVars =
    void 0;
var generateTPAParams_1 = require("./generateTPAParams");
var processor_1 = require("./processor");
var common_1 = require("./common");
function escapeRegExp(str) {
  return str.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");
}
function getProcessedCssWithVars(
  dynamicExpressions,
  cssVars,
  _a,
  options,
  defaults
) {
  var siteColors = _a.siteColors,
    siteTextPresets = _a.siteTextPresets,
    styleParams = _a.styleParams;
  options = __assign(__assign({}, common_1.defaultOptions), options || {});
  var tpaParams = (0, generateTPAParams_1.generateTPAParams)(
    siteColors,
    siteTextPresets,
    styleParams,
    options,
    defaults
  );
  var processor = (0, processor_1.getProcessor)({
    cssVars: cssVars,
    plugins: common_1.plugins,
  });
  return Object.keys(dynamicExpressions).reduce(function (obj, key) {
    var _a;
    var newValue;
    newValue = processor.process({
      part: dynamicExpressions[key],
      tpaParams: tpaParams,
    });
    return __assign(__assign({}, obj), ((_a = {}), (_a[key] = newValue), _a));
  }, {});
}
exports.getProcessedCssWithVars = getProcessedCssWithVars;
function getProcessedCssWithConfig(processedCssConfig, _a, options) {
  var siteColors = _a.siteColors,
    siteTextPresets = _a.siteTextPresets,
    styleParams = _a.styleParams;
  options = __assign(__assign({}, common_1.defaultOptions), options || {});
  if (!processedCssConfig.css) {
    return "";
  }
  var prefixedCss = processedCssConfig.css.replace(
    new RegExp(processedCssConfig.compilationHash, "g"),
    options.prefixSelector ? "".concat(options.prefixSelector) : ""
  );
  var tpaParams = (0, generateTPAParams_1.generateTPAParams)(
    siteColors,
    siteTextPresets,
    styleParams,
    options,
    processedCssConfig.defaults
  );
  var processor = (0, processor_1.getProcessor)({
    cssVars: processedCssConfig.cssVars,
    plugins: common_1.plugins,
  });
  return processedCssConfig.customSyntaxStrs.reduce(function (
    processedContent,
    part
  ) {
    var newValue;
    try {
      newValue = processor.process({ part: part, tpaParams: tpaParams });
    } catch (e) {
      if (processedCssConfig.isSrictModeDisabled || !options.strictMode) {
        newValue = "";
      } else {
        throw e;
      }
    }
    return processedContent.replace(
      new RegExp(escapeRegExp(part), "g"),
      newValue
    );
  },
  prefixedCss);
}
exports.getProcessedCssWithConfig = getProcessedCssWithConfig;
function getStaticCssWithConfig(staticCssConfig, _a) {
  var _b = _a === void 0 ? { prefixSelector: "" } : _a,
    prefixSelector = _b.prefixSelector;
  var prefixedCss = (staticCssConfig.staticCss || "").replace(
    new RegExp(staticCssConfig.compilationHash, "g"),
    prefixSelector
  );
  return prefixedCss;
}
exports.getStaticCssWithConfig = getStaticCssWithConfig;
function getBuildTimeStaticCss(staticCssConfig) {
  var prefixedCss = (staticCssConfig.staticCss || "").replace(
    new RegExp(staticCssConfig.compilationHash, "g"),
    ""
  );
  return { css: prefixedCss, hash: staticCssConfig.staticCssHash };
}
exports.getBuildTimeStaticCss = getBuildTimeStaticCss;
var css_variables_1 = require("./css-variables");
Object.defineProperty(exports, "getSiteCssVariables", {
  enumerable: true,
  get: function () {
    return css_variables_1.getSiteCssVariables;
  },
});
Object.defineProperty(exports, "getComponentCssVariables", {
  enumerable: true,
  get: function () {
    return css_variables_1.getComponentCssVariables;
  },
});
var generateTPAParams_2 = require("./generateTPAParams");
Object.defineProperty(exports, "generateTPAParamsFromStyleParams", {
  enumerable: true,
  get: function () {
    return generateTPAParams_2.generateTPAParamsFromStyleParams;
  },
});
//# sourceMappingURL=standalone.js.map
