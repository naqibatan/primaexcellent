import { __assign, __extends } from "tslib";
import React from "react";
import { CustomImageRenderer } from "./imageSourceRender";
var UnchangingImageRenderer = /** @class */ (function (_super) {
  __extends(UnchangingImageRenderer, _super);
  function UnchangingImageRenderer(props) {
    var _this = _super.call(this, props) || this;
    _this.getCurrentImage = function () {
      var props = __assign(__assign({}, _this.props), _this.state.current);
      return React.createElement(CustomImageRenderer, __assign({}, props));
    };
    _this.state = {
      current: { src: props.src },
      latest: { src: props.src },
      allowChanges: props.allowChanges,
    };
    return _this;
  }
  UnchangingImageRenderer.prototype.UNSAFE_componentWillReceiveProps =
    function (nextProps) {
      if (JSON.stringify(this.props.src) !== JSON.stringify(nextProps.src)) {
        if (this.state.allowChanges) {
          this.setState({
            current: { src: nextProps.src },
            latest: { src: nextProps.src },
          });
        } else {
          this.setState({
            latest: { src: nextProps.src },
          });
        }
      }
      if (
        nextProps.allowChanges &&
        nextProps.allowChanges !== this.state.allowChanges
      ) {
        this.setState({
          allowChanges: true,
          current: __assign(
            __assign({}, this.state.current),
            this.state.latest
          ),
        });
      }
    };
  UnchangingImageRenderer.prototype.render = function () {
    return this.getCurrentImage();
  };
  return UnchangingImageRenderer;
})(React.Component);
export { UnchangingImageRenderer };
//# sourceMappingURL=UnchangingImageRenderer.js.map
