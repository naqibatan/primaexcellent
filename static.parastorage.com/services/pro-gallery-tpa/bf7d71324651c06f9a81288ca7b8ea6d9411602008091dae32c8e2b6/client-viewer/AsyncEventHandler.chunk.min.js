"use strict";
(("undefined" != typeof self ? self : this).webpackJsonp__wix_pro_gallery_tpa =
  ("undefined" != typeof self ? self : this)
    .webpackJsonp__wix_pro_gallery_tpa || []).push([
  [100],
  {
    1190: (e, r, t) => {
      t.r(r), t.d(r, { default: () => o });
      var l = t(2712),
        n = t(9934),
        a = t(351),
        s = t(2067),
        i = t(1768);
      const o = (function () {
        function e(e, r) {
          (this.galleryWrapper = e),
            (this.galleryWrapperProps = r),
            (this.update = this.update.bind(this)),
            (this.handleEvent = this.handleEvent.bind(this)),
            (this.handleFullscreenEvent =
              this.handleFullscreenEvent.bind(this)),
            (this.handleGalleryScrolled =
              this.handleGalleryScrolled.bind(this)),
            (this.debounceHandleGalleryScrolled = s.P.debounce(
              this.handleGalleryScrolled,
              150
            ));
        }
        return (
          (e.prototype.update = function (e) {
            this.galleryWrapperProps = e;
          }),
          (e.prototype.handleGalleryScrolled = function (e) {
            var r = e.top,
              t = e.left;
            this.galleryWrapper.setState({ galleryScroll: { x: r, y: t } });
          }),
          (e.prototype.handleEvent = function (e, r, t) {
            var a;
            return (0, l.mG)(this, void 0, void 0, function () {
              return (0, l.Jh)(this, function (l) {
                switch (l.label) {
                  case 0:
                    switch (e) {
                      case n.Z.events.GALLERY_SCROLLED:
                        return [3, 1];
                      case n.Z.events.LOAD_MORE_CLICKED:
                        return [3, 2];
                      case n.Z.events.ITEM_ACTION_TRIGGERED:
                        return [3, 3];
                      case n.Z.events.CURRENT_ITEM_CHANGED:
                        return [3, 4];
                      case n.Z.events.ITEM_FOCUSED:
                        return [3, 5];
                      case n.Z.events.ITEM_LOST_FOCUS:
                        return [3, 6];
                      case n.Z.events.NEED_MORE_ITEMS:
                        return [3, 7];
                      case i.Z.SHARE_BUTTON_CLICKED:
                        return [3, 8];
                      case i.Z.SOCIAL_SHARE_BUTTON_CLICKED:
                        return [3, 10];
                      case i.Z.TEXT_DOWNLOAD_BUTTON_CLICKED:
                        return [3, 11];
                      case i.Z.LOVE_BUTTON_CLICKED:
                        return [3, 13];
                      case n.Z.events.ITEM_CLICKED:
                        return [3, 14];
                      case i.Z.DOWNLOAD_BUTTON_CLICKED:
                        return [3, 15];
                      case i.Z.CUSTOM_BUTTON_CLICKED:
                        return [3, 16];
                      case n.Z.events.THUMBNAIL_CLICKED:
                        return [3, 17];
                    }
                    return [3, 18];
                  case 1:
                    return this.debounceHandleGalleryScrolled(r), [3, 19];
                  case 2:
                    return (
                      (this.galleryWrapper.loadMoreClicked = !0),
                      (null === (a = this.galleryWrapperProps) || void 0 === a
                        ? void 0
                        : a.handleLoadMoreClicked) &&
                        this.galleryWrapperProps.handleLoadMoreClicked(),
                      [3, 19]
                    );
                  case 3:
                    return (
                      this.galleryWrapper.itemActionsHelper.onItemActionTriggered(
                        r,
                        this.galleryWrapper.siteHelper.getPGOptions()
                      ),
                      [3, 19]
                    );
                  case 4:
                    return (
                      this.galleryWrapper.itemActionsHelper.onCurrentItemChanged(
                        r
                      ),
                      [3, 19]
                    );
                  case 5:
                    return (
                      this.galleryWrapper.itemActionsHelper.onItemFocused(r),
                      [3, 19]
                    );
                  case 6:
                    return (
                      this.galleryWrapper.itemActionsHelper.onItemLostFocus(),
                      [3, 19]
                    );
                  case 7:
                    return (
                      this.galleryWrapper.itemsHelper.getMoreItems(r), [3, 19]
                    );
                  case 8:
                    return [
                      4,
                      this.galleryWrapper.itemActionsHelper.handleItemActions(
                        "share",
                        r
                      ),
                    ];
                  case 9:
                    return (
                      l.sent(),
                      this.galleryWrapper.logHelper.reportBiEvent(
                        "share",
                        r,
                        "gallery"
                      ),
                      [3, 19]
                    );
                  case 10:
                    return (
                      this.galleryWrapper.toggleSocialShareScreen(
                        r.showSocialSharePopup,
                        r
                      ),
                      this.galleryWrapper.logHelper.reportBiEvent(
                        "info",
                        r,
                        "gallery"
                      ),
                      [3, 19]
                    );
                  case 11:
                    return [
                      4,
                      this.galleryWrapper.itemActionsHelper.handleItemActions(
                        "downloadTextItem",
                        r
                      ),
                    ];
                  case 12:
                    return (
                      l.sent(),
                      this.galleryWrapper.logHelper.reportBiEvent(
                        "downloadTextItem",
                        r,
                        "gallery"
                      ),
                      [3, 19]
                    );
                  case 13:
                    return (
                      this.galleryWrapper.itemActionsHelper.onLoveClicked(
                        r,
                        "gallery"
                      ),
                      [3, 19]
                    );
                  case 14:
                    return (
                      this.galleryWrapper.itemActionsHelper.onItemClicked(r, t),
                      this.galleryWrapper.logHelper.reportBiEvent(
                        "onItemClicked",
                        r,
                        "gallery"
                      ),
                      [3, 19]
                    );
                  case 15:
                    return (
                      this.galleryWrapper.logHelper.reportBiEvent(
                        "onDownloadButtonClicked",
                        r,
                        "gallery"
                      ),
                      [3, 19]
                    );
                  case 16:
                    return (
                      this.galleryWrapper.isStoreGallery()
                        ? this.galleryWrapper.logHelper.reportBiEvent(
                            "onBuyNowClicked",
                            r,
                            "gallery"
                          )
                        : this.galleryWrapper.logHelper.reportBiEvent(
                            "onPGCustomButtonClicked",
                            r,
                            "gallery"
                          ),
                      [3, 19]
                    );
                  case 17:
                    return (
                      this.galleryWrapper.logHelper.reportBiEvent(
                        "onThumbnailClicked",
                        r,
                        "gallery"
                      ),
                      [3, 19]
                    );
                  case 18:
                    s.P.isVerbose() &&
                      console.log(e, "is not handled in handleEvent function"),
                      (l.label = 19);
                  case 19:
                    return [2];
                }
              });
            });
          }),
          (e.prototype.handleFullscreenEvent = function (e, r) {
            return (0, l.mG)(this, void 0, void 0, function () {
              return (0, l.Jh)(this, function (t) {
                switch (t.label) {
                  case 0:
                    switch (e) {
                      case a.Z.UPDATE_CURRENT_ITEM:
                        return [3, 1];
                      case a.Z.CLOSE_FULLSCREEN:
                        return [3, 3];
                      case a.Z.NEED_MORE_ITEMS:
                        return [3, 4];
                      case a.Z.TOGGLE_BROWSER_FULLSCREEN:
                        return [3, 5];
                      case a.Z.NAVIGATE:
                        return [3, 6];
                      case a.Z.FULLSCREEN_LOADED:
                        return [3, 7];
                      case a.Z.SHARE_BUTTON_CLICKED:
                        return [3, 8];
                      case a.Z.SOCIAL_SHARE_BUTTON_CLICKED:
                        return [3, 10];
                      case a.Z.TEXT_DOWNLOAD_BUTTON_CLICKED:
                        return [3, 11];
                      case a.Z.DOWNLOAD_BUTTON_CLICKED:
                        return [3, 13];
                      case a.Z.LOVE_BUTTON_CLICKED:
                        return [3, 14];
                    }
                    return [3, 15];
                  case 1:
                    return [
                      4,
                      this.galleryWrapper.fullscreenHelper.updateFullscreenCurrentItem(
                        r.item
                      ),
                    ];
                  case 2:
                    return t.sent(), [3, 16];
                  case 3:
                    return (
                      this.galleryWrapper.fullscreenHelper.animatedCloseFullscreen(
                        r.itemIdx,
                        r.animationDuration
                      ),
                      this.galleryWrapper.fullscreenHelper.dispatchFullscreenChange(
                        !1
                      ),
                      [3, 16]
                    );
                  case 4:
                    return (
                      this.galleryWrapper.itemsHelper.getMoreItems(r), [3, 16]
                    );
                  case 5:
                    return (
                      this.galleryWrapper.fullscreenHelper.toggleBrowserFullscreen(),
                      [3, 16]
                    );
                  case 6:
                    return (
                      this.galleryWrapper.itemActionsHelper.onLinkNavigation(r),
                      [3, 16]
                    );
                  case 7:
                    return (
                      this.galleryWrapper.logHelper.reportBiEvent(
                        "item_expanded",
                        r,
                        "fullscreen"
                      ),
                      [3, 16]
                    );
                  case 8:
                    return [
                      4,
                      this.galleryWrapper.itemActionsHelper.handleItemActions(
                        "share",
                        r
                      ),
                    ];
                  case 9:
                    return (
                      t.sent(),
                      this.galleryWrapper.logHelper.reportBiEvent(
                        "share",
                        r,
                        "fullscreen"
                      ),
                      [3, 16]
                    );
                  case 10:
                    return (
                      this.galleryWrapper.toggleSocialShareScreen(
                        r.showSocialSharePopup,
                        r
                      ),
                      this.galleryWrapper.logHelper.reportBiEvent(
                        "info",
                        r,
                        "fullscreen"
                      ),
                      [3, 16]
                    );
                  case 11:
                    return [
                      4,
                      this.galleryWrapper.itemActionsHelper.handleItemActions(
                        "downloadTextItem",
                        r
                      ),
                    ];
                  case 12:
                    return (
                      t.sent(),
                      this.galleryWrapper.logHelper.reportBiEvent(
                        "downloadTextItem",
                        r,
                        "fullscreen"
                      ),
                      [3, 16]
                    );
                  case 13:
                    return (
                      this.galleryWrapper.logHelper.reportBiEvent(
                        "onDownloadButtonClicked",
                        r,
                        "fullscreen"
                      ),
                      [3, 16]
                    );
                  case 14:
                    return (
                      this.galleryWrapper.itemActionsHelper.onLoveClicked(
                        r,
                        "fullscreen"
                      ),
                      [3, 16]
                    );
                  case 15:
                    s.P.isVerbose() &&
                      console.log(e, "is not handled in handleEvent function"),
                      (t.label = 16);
                  case 16:
                    return [2];
                }
              });
            });
          }),
          e
        );
      })();
    },
  },
]);
//# sourceMappingURL=AsyncEventHandler.chunk.min.js.map
