"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.queryActivityCounters =
  exports.getActivityCounters =
  exports.incrementActivityCounters =
  exports.setActivityCounters =
    void 0;
var metro_runtime_1 = require("@wix/metro-runtime");
var ambassador_1 = require("@wix/metro-runtime/ambassador");
var metro_runtime_2 = require("@wix/metro-runtime");
var _getActivityCountersRequest = {};
var _getActivityCountersResponse = {};
var _incrementActivityCountersRequest = {};
var _incrementActivityCountersResponse = {};
var _queryActivityCountersRequest = {};
var _queryActivityCountersResponse = {};
var _setActivityCountersRequest = {};
var _setActivityCountersResponse = {};
function resolveComWixpressMembersActivitycountersActivityCountersUrl(opts) {
  var domainToMappings = {
    "api._api_base_domain_": [
      {
        srcPath: "/activity-counters-api",
        destPath: "",
      },
    ],
    "www.wixapis.com": [
      {
        srcPath: "/members/v1/activity-counters",
        destPath: "/v1/activity-counters",
      },
    ],
    _: [
      {
        srcPath: "/_api/members/v1/activity-counters",
        destPath: "/v1/activity-counters",
      },
    ],
    "manage._base_domain_": [
      {
        srcPath: "/_api/members/v1/activity-counters",
        destPath: "/v1/activity-counters",
      },
    ],
    "www._base_domain_": [
      {
        srcPath: "/_api/members/v1/activity-counters",
        destPath: "/v1/activity-counters",
      },
    ],
    "*.dev.wix-code.com": [
      {
        srcPath: "/_api/members/v1/activity-counters",
        destPath: "/v1/activity-counters",
      },
    ],
  };
  return (0, metro_runtime_2.resolveUrl)(
    Object.assign(opts, { domainToMappings: domainToMappings })
  );
}
/**
 * Sets activity counters for a requested site member.
 *
 * If a counter does not yet exist, it will be created.
 *
 * Counters are set under a custom key, which is an ID for the counter, and is unique per app.
 */
function setActivityCounters(payload) {
  var _a = (0, ambassador_1.serializer)(_setActivityCountersRequest, {}),
    toReq = _a.toJSON,
    fromReq = _a.fromJSON;
  var fromRes = (0, ambassador_1.serializer)(
    _setActivityCountersResponse,
    {}
  ).fromJSON;
  function __setActivityCounters(_a) {
    var host = _a.host;
    var serializedData = toReq(payload);
    var metadata = {
      entityFqdn: "wix.members.v1.activity_counter",
      method: "PUT",
      methodFqn:
        "com.wixpress.members.activitycounters.ActivityCounters.SetActivityCounters",
      url: resolveComWixpressMembersActivitycountersActivityCountersUrl({
        protoPath: "/v1/activity-counters/{memberId}",
        data: serializedData,
        host: host,
      }),
      data: serializedData,
      transformResponse: fromRes,
    };
    return metadata;
  }
  __setActivityCounters.fromReq = fromReq;
  return __setActivityCounters;
}
exports.setActivityCounters = setActivityCounters;
/**
 * Increments activity counters for a requested site member by the count provided in counter.
 *
 * If a counter does not yet exist, it will be created.
 *
 * Counters are incremented under a custom key, which is an ID for the counter, and is unique per app.
 */
function incrementActivityCounters(payload) {
  var _a = (0, ambassador_1.serializer)(_incrementActivityCountersRequest, {}),
    toReq = _a.toJSON,
    fromReq = _a.fromJSON;
  var fromRes = (0, ambassador_1.serializer)(
    _incrementActivityCountersResponse,
    {}
  ).fromJSON;
  function __incrementActivityCounters(_a) {
    var host = _a.host;
    var serializedData = toReq(payload);
    var metadata = {
      entityFqdn: "wix.members.v1.activity_counter",
      method: "PUT",
      methodFqn:
        "com.wixpress.members.activitycounters.ActivityCounters.IncrementActivityCounters",
      url: resolveComWixpressMembersActivitycountersActivityCountersUrl({
        protoPath: "/v1/activity-counters/{memberId}/increment",
        data: serializedData,
        host: host,
      }),
      data: serializedData,
      transformResponse: fromRes,
    };
    return metadata;
  }
  __incrementActivityCounters.fromReq = fromReq;
  return __incrementActivityCounters;
}
exports.incrementActivityCounters = incrementActivityCounters;
/**
 * Returns activity counters for a requested site member.
 * A third party can read all the public counters, set by any apps. However, third parties can only read their own private counters, not those from others' apps.
 */
function getActivityCounters(payload) {
  var _a = (0, ambassador_1.serializer)(_getActivityCountersRequest, {}),
    toReq = _a.toJSON,
    fromReq = _a.fromJSON;
  var fromRes = (0, ambassador_1.serializer)(
    _getActivityCountersResponse,
    {}
  ).fromJSON;
  function __getActivityCounters(_a) {
    var host = _a.host;
    var serializedData = toReq(payload);
    var metadata = {
      entityFqdn: "wix.members.v1.activity_counter",
      method: "GET",
      methodFqn:
        "com.wixpress.members.activitycounters.ActivityCounters.GetActivityCounters",
      url: resolveComWixpressMembersActivitycountersActivityCountersUrl({
        protoPath: "/v1/activity-counters/{memberId}",
        data: serializedData,
        host: host,
      }),
      params: (0, metro_runtime_1.toURLSearchParams)(serializedData),
      transformResponse: fromRes,
    };
    return metadata;
  }
  __getActivityCounters.fromReq = fromReq;
  return __getActivityCounters;
}
exports.getActivityCounters = getActivityCounters;
/**
 * Returns up to 100 activity counters for the provided filter and paging.
 *
 * Service will return only counters that are marked as public, or private counters from apps created by the requesting third party.
 *
 * Supported fields for filtering:
 * - memberId
 *
 * Supported operations:
 * Comparison:
 * - $eq
 * - $ne
 * - $in
 * Logical:
 * - $and
 * - $not
 * - $or
 */
function queryActivityCounters(payload) {
  var _a = (0, ambassador_1.serializer)(_queryActivityCountersRequest, {}),
    toReq = _a.toJSON,
    fromReq = _a.fromJSON;
  var fromRes = (0, ambassador_1.serializer)(
    _queryActivityCountersResponse,
    {}
  ).fromJSON;
  function __queryActivityCounters(_a) {
    var host = _a.host;
    var serializedData = toReq(payload);
    var metadata = {
      entityFqdn: "wix.members.v1.activity_counter",
      method: "POST",
      methodFqn:
        "com.wixpress.members.activitycounters.ActivityCounters.QueryActivityCounters",
      url: resolveComWixpressMembersActivitycountersActivityCountersUrl({
        protoPath: "/v1/activity-counters/query",
        data: serializedData,
        host: host,
      }),
      data: serializedData,
      transformResponse: fromRes,
    };
    return metadata;
  }
  __queryActivityCounters.fromReq = fromReq;
  return __queryActivityCounters;
}
exports.queryActivityCounters = queryActivityCounters;
//# sourceMappingURL=http.impl.js.map
