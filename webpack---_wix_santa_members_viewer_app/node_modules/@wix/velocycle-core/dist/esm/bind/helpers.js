import { __spreadArrays } from "tslib";
export var isRepeater = function (param) {
  return "data" in param;
};
export var isMultiStateBox = function (param) {
  return "currentState" in param;
};
export var isEventHandler = function (name) {
  return name.startsWith("on");
};
var imperatives = {
  disabled: {
    on: "disable",
    off: "enable",
  },
  hidden: {
    on: "hide",
    off: "show",
  },
  collapsed: {
    on: "collapse",
    off: "expand",
  },
  deleted: {
    on: "delete",
    off: "restore",
  },
};
export var getImperative = function (key) {
  return imperatives[key];
};
export var isImperative = function (api, key) {
  return (
    key in imperatives &&
    imperatives[key].on in api &&
    imperatives[key].off in api
  );
};
export var isNestedAttributes = function (observableValue) {
  return typeof observableValue === "object";
};
export function set(object, path, value) {
  if (!object || typeof object !== "object") {
    return object;
  }
  var keys = __spreadArrays(path);
  var lastKey = keys.pop();
  if (!lastKey) {
    return;
  }
  var current = object;
  for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {
    var key = keys_1[_i];
    if (!current[key] || typeof current[key] !== "object") {
      current[key] = {};
    }
    current = current[key];
  }
  current[lastKey] = value;
  return object;
}
export function get(object, keys, defaultValue) {
  if (!object || typeof object !== "object") {
    return defaultValue;
  }
  var current = object;
  for (var _i = 0, keys_2 = keys; _i < keys_2.length; _i++) {
    var key = keys_2[_i];
    if (!current || typeof current !== "object") {
      return defaultValue;
    }
    current = current[key];
  }
  return current !== undefined ? current : defaultValue;
}
//# sourceMappingURL=helpers.js.map
